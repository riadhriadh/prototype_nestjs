"main";_65c‍.x([["print",()=>print],["retrieveCols",()=>retrieveCols],["printStats",()=>printStats],["printLogo",()=>printLogo],["emoji",()=>emoji],["printFooter",()=>printFooter]]);let execSync;_65c‍.w("child_process",[["execSync",["execSync"],function(v){execSync=v}]]);let chalk;_65c‍.w("chalk",[["default",["chalk"],function(v){chalk=v}]]);let formatMoney,isWin32;_65c‍.w("./misc",[["formatMoney",["formatMoney"],function(v){formatMoney=v}],["isWin32",["isWin32"],function(v){isWin32=v}]]);/* eslint-disable no-console */
/* eslint-disable no-control-regex */




       const print = (color = null) => (str = '') => {
  const terminalCols = retrieveCols()
  const strLength = str.replace(/\u001b\[[0-9]{2}m/g, '').length
  const leftPaddingLength = Math.floor((terminalCols - strLength) / 2)
  const leftPadding = ' '.repeat(Math.max(leftPaddingLength, 0))
  if (color) {
    str = chalk[color](str)
  }

  _65c‍.g.console.log(leftPadding, str)
}

       const retrieveCols = (() => {
  let result = false

  return () => {
    if (result) {
      return result
    }
    const defaultCols = 80
    try {
      const terminalCols = execSync(`tput cols`, { stdio: ['pipe', 'pipe', 'ignore'] })
      result = parseInt(terminalCols.toString()) || defaultCols
    } catch (e) {
      result = defaultCols
    }
    return result
  }
})()

       const printStats = (stats, color) => {
  if (!stats) {
    return
  }

  const colored = print(color)
  const bold = print('bold')

  const formatWithCurrency = formatMoney(stats.currency)

  colored(`Number of contributors: ${stats.contributorsCount}`)
  colored(`Number of backers: ${stats.backersCount}`)
  colored(`Annual budget: ${formatWithCurrency(stats.yearlyIncome)}`)
  bold(`Current balance: ${formatWithCurrency(stats.balance)}`, 'bold')
}

       const printLogo = logoText => {
  if (!logoText) {
    return
  }

  logoText.split('\n').forEach(print('blue'))
}

/**
 * Only show emoji on OSx (Windows shell doesn't like them that much ¯\_(ツ)_/¯ )
 * @param {*} emoji
 */
       const emoji = emoji => process.stdout.isTTY && !isWin32 ? emoji : ''

       function printFooter (collective) {
  const dim = print('dim')
  const yellow = print('yellow')
  const emptyLine = print()

  yellow(`Thanks for installing ${collective.slug} ${emoji('🙏')}`)
  dim(`Please consider donating to our open collective`)
  dim(`to help us maintain this package.`)
  emptyLine()
  printStats(collective.stats)
  emptyLine()
  print()(`${chalk.bold(`${emoji('👉 ')} ${collective.donationText}`)} ${chalk.underline(collective.donationUrl)}`)
  emptyLine()
}
